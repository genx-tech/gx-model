{"version":3,"sources":["../../src/cli/index.js"],"names":["Starters","startCommand","require","_","findKey","pkg","AppInitiator","Commands","getCommandOptions","binItem","bin","v","afterCommandConfirmed","cli","cmd","argv","options","usage","parse","onVerboseMode","app","logger","level","resetLogger","main","commandLine","option","showUsage","console","log","version","command","appInitiator","cwd","process","run","commandName","config","banner","program","arguments","name","required","inquire","promptType","promptMessage","choicesProvider","map","desc","value","afterInquire","onArgumentExists","s","alias","bool","default","verbose","h","c","silentMode","nonValidationMode","showUsageOnError","showArguments","module","parent","exports"],"mappings":"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","sourcesContent":["const {\n    Starters: { startCommand },\n} = require(\"@genx/app\");\nconst { _, findKey } = require(\"@genx/july\");\nconst pkg = require(\"../../package.json\");\n\nconst AppInitiator = require(\"../AppInitiator\");\nconst { Commands, getCommandOptions } = require(\"./commands\");\n\nconst binItem = findKey(pkg.bin, (v) => v === \"bin/geml.js\");\n\nconst afterCommandConfirmed = (cli) => {\n    let cmd = cli.argv._[0];\n    let options = getCommandOptions(cli, cmd);\n    cli.usage.options = { ...cli.usage.options, ...options };\n    cli.parse(cli.usage.options);\n};\n\nconst onVerboseMode = (cli) => {\n    if (cli.argv['verbose']) {\n        cli.app.options.logger.level = 'verbose';\n        cli.app.resetLogger();        \n    }\n};\n\nfunction main() {\n    startCommand(\n        (app) => {\n            let cmd = app.commandLine;\n\n            if (cmd.option(\"help\")) {\n                cmd.showUsage();\n                return;\n            }\n\n            if (cmd.option(\"version\")) {\n                console.log(pkg.version);\n                return;\n            }\n\n            let command = cmd.argv._[0];\n\n            const appInitiator = new AppInitiator({\n                app,\n                cwd: process.cwd(),\n            });\n\n            return appInitiator.run(command);\n        },\n        {\n            commandName: binItem,\n            config: {\n                version: pkg.version,\n                commandLine: {\n                    banner: `Gen-X entity modeling command line v${pkg.version}`,\n                    program: binItem,\n                    arguments: [\n                        {\n                            name: \"command\",\n                            required: true,\n                            inquire: true,\n                            promptType: \"list\",\n                            promptMessage: \"What command are you going to execute?\",\n                            choicesProvider: _.map(Commands, (desc, cmd) => ({ name: `${cmd} - ${desc}`, value: cmd })),\n                            afterInquire: afterCommandConfirmed,\n                            onArgumentExists: afterCommandConfirmed,\n                        },\n                    ],\n                    options: {\n                        s: {\n                            desc: \"Silent mode\",\n                            alias: [\"silent\"],\n                            bool: true,\n                            default: false,\n                        },\n                        v: {\n                            desc: \"Show version information\",\n                            alias: [\"version\"],\n                            bool: true,\n                            default: false,\n                        },\n                        verbose: {\n                            desc: \"Show verbose information\",\n                            bool: true,\n                            default: false,\n                            afterInquire: onVerboseMode,\n                            onArgumentExists: onVerboseMode,\n                        },\n                        h: {\n                            desc: \"Show usage message\",\n                            alias: [\"help\"],\n                            bool: true,\n                            default: false,\n                        },\n                        c: {\n                            desc: \"Config path\",\n                            alias: [\"conf\", \"config\"],\n                        },\n                    },\n                    silentMode: (cli) => cli.argv[\"silent\"] || cli.argv[\"version\"] || cli.argv[\"help\"],\n                    nonValidationMode: (cli) => cli.argv[\"version\"] || cli.argv[\"help\"],\n                    showUsageOnError: true,\n                    showArguments: (cli) => cli.argv[\"verbose\"],\n                },\n            },\n        }\n    );\n}\n\nif (!module.parent) {\n    main();\n} else {\n    module.exports = main;\n}\n"],"file":"index.js"}