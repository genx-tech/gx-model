{"version":3,"file":"AppInitiator.js","names":["path","require","_","text","fs","ServiceContainer","Validators","validateObjectBySchema","moduleApi","checkModule","fromPath","name","requireFrom","createRequire","ensureEndsWith","sep","basePath","resolve","paths","find","existsSync","join","err","AppInitiator","constructor","context","app","cwd","run","command","gemlConfig","configFile","commandLine","option","configFullPath","Error","extName","extname","configName","basename","configPath","dirname","envAware","endsWith","substring","length","featuresPath","allowFeatures","Array","isArray","container","workingPath","disableEnvAwareConfig","allowedFeatures","replaceLogger","logger","on","asyncHandlers","push","config","settings","geml","isEmpty","gemlPath","modelPath","scriptPath","manifestPath","useJsonSource","saveIntermediate","type","default","optional","schemas","dependencies","options","toAbsolutePath","load_","useDb","start_","once","stopper","stop_","mapValues","pkgPath","pkgRoot","pathExistsSync","pkgDefaultConfig","pkgGemlPath","pkgConfig","readJsonSync","cmdMethod_","error","log","message","process","exit","module","exports"],"sources":["../src/AppInitiator.js"],"sourcesContent":["const path = require(\"path\");\nconst { _, text } = require(\"@genx/july\");\nconst { fs } = require(\"@genx/sys\");\nconst { ServiceContainer } = require(\"@genx/app\");\nconst {\n    Validators: { validateObjectBySchema },\n} = require(\"@genx/data\");\n\nconst moduleApi = require(\"module\");\n\nconst checkModule = (fromPath, name) => {\n    try {\n        const requireFrom = moduleApi.createRequire(text.ensureEndsWith(fromPath, path.sep));\n\n        const basePath = requireFrom.resolve.paths(name).find((basePath) => fs.existsSync(path.join(basePath, name)));\n        return path.join(basePath, name);\n    } catch (err) {\n        return false;\n    }\n};\n\nclass AppInitiator {\n    constructor(context) {\n        this.app = context.app;\n        this.cwd = context.cwd;\n    }\n\n    async run(command) {\n        let gemlConfig;\n\n        if (command !== \"init\") {\n            let configFile = this.app.commandLine.option(\"config\");\n            let configFullPath;\n\n            if (configFile) {\n                configFullPath = path.resolve(this.cwd, configFile);\n\n                if (!fs.existsSync(configFullPath)) {\n                    throw new Error(`Config \"${configFile}\" not found! cwd: ${this.cwd}`);\n                }\n            } else {\n                configFullPath = path.resolve(this.cwd, \"conf/app.default.json\");\n\n                if (!fs.existsSync(configFullPath)) {\n                    configFullPath = path.resolve(this.cwd, \"conf/server.default.json\");\n                    if (!fs.existsSync(configFullPath)) {\n                        throw new Error('Either \"conf/app.default.json\" or \"conf/server.default.json\" not found.');\n                    }\n                }\n            }\n\n            let extName = path.extname(configFullPath);\n            if (extName !== \".json\") {\n                throw new Error(\"Only supports JSON config.\");\n            }\n\n            let configName = path.basename(configFullPath, extName);\n            let configPath = path.dirname(configFullPath);\n            let envAware = false;\n\n            if (configName.endsWith(\".default\")) {\n                envAware = true;\n                configName = configName.substring(0, configName.length - 8);\n            }\n\n            const featuresPath = this.app.commandLine.option(\"features-path\");\n\n            let allowFeatures = this.app.commandLine.option(\"allow\");\n            if (allowFeatures && !Array.isArray(allowFeatures)) {\n                allowFeatures = [allowFeatures];\n            }\n\n            this.container = new ServiceContainer(this.app.name, {\n                workingPath: this.cwd,\n                configPath,\n                configName,\n                featuresPath,\n                disableEnvAwareConfig: !envAware,\n                allowedFeatures: [\n                    \"configByHostname\",\n                    \"devConfigByGitUser\",\n                    \"appLogger\",\n                    \"loggers\",\n                    \"settings\",\n                    \"timezone\",\n                    \"version\",\n                    \"dataSource\",\n                    \"env\",\n                    \"featureRegistry\",\n                    ...(allowFeatures ?? []),\n                ],\n            });\n\n            this.container.replaceLogger(this.app.logger);\n\n            // useDb should be run at init level after settings loaded\n            this.container.on(\"after:Initial\", (asyncHandlers) => {\n                asyncHandlers.push((async () => {\n                    let config = this.container.settings.geml;\n                    if (_.isEmpty(config)) {\n                        throw new Error(\"Empty geml config!\");\n                    }\n\n                    let { gemlPath, modelPath, scriptPath, manifestPath, useJsonSource, saveIntermediate } =\n                        validateObjectBySchema(config, {\n                            gemlPath: { type: \"text\", default: \"geml\" },\n                            modelPath: { type: \"text\", default: \"src/models\" },\n                            scriptPath: { type: \"text\", default: \"src/scripts\" },\n                            manifestPath: { type: \"text\", optional: true },\n                            useJsonSource: { type: \"boolean\", optional: true, default: false },\n                            saveIntermediate: { type: \"boolean\", optional: true, default: false },\n                            schemas: {\n                                type: \"object\",\n                                optional: true,\n                            },\n                            dependencies: {\n                                type: \"object\",\n                                optional: true,\n                            },\n                        });\n\n                    this.container.options.modelPath = modelPath;\n\n                    gemlPath = this.container.toAbsolutePath(gemlPath);\n                    modelPath = this.container.toAbsolutePath(modelPath);\n                    scriptPath = this.container.toAbsolutePath(scriptPath);\n                    manifestPath = manifestPath && this.container.toAbsolutePath(manifestPath);\n\n                    gemlConfig = {\n                        ...config,\n                        gemlPath,\n                        modelPath,\n                        scriptPath,\n                        manifestPath,\n                        useJsonSource,\n                        saveIntermediate,\n                        configFullPath,\n                    };\n\n                    if (!_.isEmpty(gemlConfig.schemas)) {\n                        const { load_: useDb } = require(\"@genx/app/lib/features/useDb\");\n                        await useDb(this.container, gemlConfig.schemas);\n                    }\n                })());\n            });\n\n            await this.container.start_();\n\n            this.app.once(\"stopping\", (stopper) => {\n                stopper.push(\n                    (async () => {\n                        await this.container.stop_();\n                    })()\n                );\n            });\n\n            this.container.option = (name) => {\n                return this.app.commandLine.option(name);\n            };\n\n            if (!_.isEmpty(gemlConfig.dependencies)) {\n                gemlConfig.dependencies = _.mapValues(gemlConfig.dependencies, (pkgPath) => {\n                    let pkgRoot = this.container.toAbsolutePath(pkgPath);\n                    if (!fs.pathExistsSync(pkgRoot)) {\n                        pkgRoot = checkModule(this.container.workingPath, pkgPath);\n                        if (!pkgRoot) {\n                            throw new Error(`Dependency package \"${pkgPath}\" not found.`);\n                        }\n                    }\n\n                    const pkgDefaultConfig = path.resolve(pkgRoot, \"conf/app.default.config\");\n\n                    let pkgGemlPath;\n\n                    if (fs.existsSync(pkgDefaultConfig)) {\n                        const pkgConfig = fs.readJsonSync(pkgDefaultConfig);\n                        pkgGemlPath = pkgConfig.settings?.geml?.gemlPath;\n                    }\n\n                    return path.join(pkgRoot, pkgGemlPath || \"geml\");\n                });\n            }\n        } else {\n            this.container = this.app;\n        }\n\n        let cmdMethod_ = require(\"./commands/\" + command);\n\n        try {\n            await cmdMethod_(this.container, gemlConfig);\n        } catch (error) {\n            //throw error;\n            this.app.log(\"error\", error.message);\n            process.exit(1);\n        }\n    }\n}\n\nmodule.exports = AppInitiator;\n"],"mappings":"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"}