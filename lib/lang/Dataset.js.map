{"version":3,"file":"Dataset.js","names":["_","require","deepCloneField","Clonable","isDotSeparateName","Dataset","constructor","linker","name","gemlModule","info","camelCase","link","pre","linked","entity","getReferencedEntity","mainEntity","dataset","loadDataset","assert","joinWith","cloneDeep","isEmpty","concat","buildHierarchy","inSchema","_flattenDataset","hierarchy","leftEntity","entities","forEach","joining","leftField","rightEntity","rightField","on","left","lastPos","lastIndexOf","fieldRef","substr","entityRef","getEntityAttribute","Error","rightHierarchy","getDocumentHierachy","right","parts","split","length","Object","assign","linkWithField","oolType","subDocuments","clone","toJSON","module","exports"],"sources":["../../src/lang/Dataset.js"],"sourcesContent":["\"use strict\";\n\nconst { _ } = require('@genx/july');\nconst { deepCloneField, Clonable, isDotSeparateName } = require('./GemlUtils');\n\n/**\n * Geml dataset class.\n * @class Dataset\n */\nclass Dataset extends Clonable {\n    /**     \n     * @param {Linker} linker\n     * @param {string} name - Dataset name\n     * @param {object} gemlModule - Source ool module\n     * @param {object} info - Dataset info\n     */\n    constructor(linker, name, gemlModule, info) {\n        super();\n        \n        /**\n         * Linker to process this document\n         * @member {Linker}\n         */\n        this.linker = linker;\n\n        /**\n         * Name of this document\n         * @member {string}\n         */\n        this.name = _.camelCase(name);\n\n        /**\n         * Owner oolong module\n         * @member {object}\n         */\n        this.gemlModule = gemlModule;\n\n        /**\n         * Raw metadata\n         * @member {Object}\n         */\n        this.info = info;\n    }\n\n    /**\n     * Start linking this dataset\n     * @returns {Dataset}\n     */\n    link() {\n        pre: !this.linked;\n\n        if (this.info.entity) {\n            let entity = this.linker.getReferencedEntity(this.gemlModule, this.info.entity);\n            this.mainEntity = entity.name;\n        } else {\n            let dataset = this.linker.loadDataset(this.gemlModule, this.info.dataset);\n            assert: dataset.linked;\n\n            this.mainEntity = dataset.mainEntity;\n            this.joinWith = _.cloneDeep(dataset.joinWith);\n        }\n        \n        if (!_.isEmpty(this.info.joinWith)) {\n            if (!this.joinWith) {\n                this.joinWith = _.cloneDeep(this.info.joinWith);\n            } else {\n                this.joinWith = this.joinWith.concat(this.info.joinWith);\n            }\n        }\n\n        this.linked = true;\n\n        return this;\n    }\n\n    buildHierarchy(inSchema) {\n        return this._flattenDataset(inSchema, this);\n    }\n\n    _flattenDataset(inSchema, dataset) {\n        let hierarchy = {};\n        let leftEntity = inSchema.entities[dataset.mainEntity];\n\n        if (dataset.joinWith) {\n            dataset.joinWith.forEach(joining => {\n                let leftField, rightEntity, rightField;\n\n                if (isDotSeparateName(joining.on.left)) {\n                    let lastPos = joining.on.left.lastIndexOf('.');\n                    let fieldRef = joining.on.left.substr(lastPos+1);\n                    let entityRef = joining.on.left.substr(0, lastPos);\n\n                    if (entityRef === leftEntity.name) {\n                        leftField = leftEntity.getEntityAttribute(fieldRef);\n                    } else {\n                        throw new Error(`Unsupported syntax of left side joining field \"${joining.on.left}\".`);\n                    }\n\n                } else {\n                    //field of leftEntity\n                    leftField = leftEntity.getEntityAttribute(joining.on.left);\n                }\n\n                if (joining.dataset) {\n                    let rightHierarchy = inSchema.getDocumentHierachy(this.gemlModule, joining.dataset);\n\n                    if (isDotSeparateName(joining.on.right)) {\n                        let parts = joining.on.right.split('.');\n                        if (parts.length > 2) {\n                            throw new Error('Joining a document should only referencing to a field of its main entity.');\n                        }\n\n                        let [ entityRef, fieldRef ] = parts;\n\n                        if (entityRef !== rightHierarchy.entity) {\n\n                            throw new Error(`Referenced field \"${joining.on.right}\" not found while linking to document \"${joining.dataset}\".`);\n                        }\n\n                        assert: !hierarchy[leftField.name], 'Duplicate joinings on the same field of the left side entity.';\n\n                        rightEntity = inSchema.entities[entityRef];\n                        rightField = rightEntity.getEntityAttribute(fieldRef);\n\n                        hierarchy[leftField.name] = Object.assign({}, rightHierarchy, {\n                            linkWithField: rightField.name\n                        });\n\n                        return;\n                    }\n\n                    //joining.on.right is field name of the main entity\n                    rightEntity = inSchema.entities[joining.dataset.mainEntity];\n                } else {\n                    rightEntity = inSchema.entities[joining.entity];\n\n                    if (isDotSeparateName(joining.on.right)) {\n                        throw new Error(`Referenced field \"${joining.on.right}\" not found while linking to entity \"${joining.entity}\".`);\n                    }\n                }\n\n                //field of rightEntity\n                rightField = rightEntity.getEntityAttribute(joining.on.right);\n\n                assert: !hierarchy[leftField.name], 'Duplicate joinings on the same field of the left side entity.';\n\n                hierarchy[leftField.name] = {\n                    oolType: 'DocumentHierarchyNode',\n                    entity: rightEntity.name,\n                    linkWithField: rightField.name\n                };\n            });\n        }\n\n        return {\n            oolType: 'DocumentHierarchyNode',\n            entity: leftEntity.name,\n            subDocuments: hierarchy\n        };\n    }\n\n    /**\n     * Clone the document\n     * @returns {Dataset}\n     */\n    clone() {\n        super.clone();\n\n        let dataset = new Dataset(this.linker, this.name, this.gemlModule, this.info);\n\n        dataset.mainEntity = this.mainEntity;\n        deepCloneField(this, dataset, 'joinWith');\n\n        dataset.linked = true;\n\n        return dataset;\n    }\n\n\n    /**\n     * Translate the document into a plain JSON object\n     * @returns {object}\n     */\n    toJSON() {\n        return {            \n            name: this.name,\n            mainEntity: this.mainEntity.toJSON(),\n            joinWith: this.joinWith\n        };\n    }\n}\n\nmodule.exports = Dataset;"],"mappings":"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"}