{"version":3,"file":"autoId.js","names":["_","require","FEATURE_NAME","feature","entity","args","typeInfo","name","type","auto","writeOnce","options","featureExtra","startFrom","prefix","Error","length","opt","prefixLength","fixedLength","urlSafe","isEmpty","push","fieldName","addFeature","field","once","addField","setKey","module","exports"],"sources":["../../../src/lang/entityFeatures/autoId.js"],"sourcesContent":["\"use strict\";\n\nconst { _ } = require('@genx/july');\n\nconst FEATURE_NAME = 'autoId';\n\n/**\n * A rule specifies the id of entity is automatically generated.\n * @module EntityFeature_AutoId\n */\n\n/**\n * Initialize the feature\n * @param {Entity} entity - Entity to apply this feature\n * @param {array} options - Auto id field options\n * @property {string} [options.name='id'] - Field name\n * @property {string} [options.type='integer'] - Field type\n */\nfunction feature(entity, args = []) {\n    let typeInfo = {\n        name: 'id',\n        type: 'integer',\n        auto: true,        \n        writeOnce: true\n    };\n\n    let [ options ] = args;\n\n    let featureExtra = {};\n\n    if (options) {\n        if (typeof options === 'string') {\n            options = { name: options };\n        }        \n\n        if (options.type) {\n            switch (options.type) {\n                case 'integer':\n                    if (options.startFrom) {\n                        featureExtra.startFrom = options.startFrom;\n                    }\n                break;\n\n                case 'uuid':\n                    typeInfo['type'] = 'text';\n                    typeInfo['fixedLength'] = 36;\n                    typeInfo['generator'] = 'uuid';\n                break;\n\n                case 'shortid':\n                    typeInfo['type'] = 'text';\n                    typeInfo['maxLength'] = 20;\n                    typeInfo['generator'] = 'shortid';\n                break;\n\n                case 'uniqid':\n                    typeInfo['type'] = 'text';                    \n\n                    if (options.prefix) {\n                        if (typeof options.prefix !== 'string') {\n                            throw new Error(`\"prefix\" option should be a string. Entity: ${entity.name}, feature: autoId`);\n                        }    \n\n                        typeInfo['fixedLength'] = 17 + options.prefix.length;\n                        typeInfo['generator'] = [ 'uniqid', options.prefix ];\n                    } else {\n                        typeInfo['fixedLength'] = 17;\n                        typeInfo['generator'] = 'uniqid';\n                    }                    \n                break;\n\n                case 'hyperid':\n                    typeInfo['type'] = 'text';                                           \n\n                    let args = [ 'hyperid' ];\n                    let opt = {};\n                    let prefixLength;\n\n                    if (options.prefix) {\n                        prefixLength = options.prefix.length;\n                        opt.prefix = options.prefix;\n                    } else {\n                        prefixLength = 0;\n                    }\n\n                    if (options.fixedLength) {\n                        opt.fixedLength = options.fixedLength;\n                        typeInfo['fixedLength'] = 33 + prefixLength;\n                    } else {\n                        typeInfo['maxLength'] = 40 + prefixLength;\n                    }\n\n                    if (options.urlSafe) {\n                        opt.urlSafe = options.urlSafe;\n                    }\n\n                    if (!_.isEmpty(opt)) {\n                        args.push(opt);\n                    }\n\n                    typeInfo['generator'] = args.length > 1 ? args : args[0];\n                break;\n\n                default:\n                    throw new Error(`Unsupported autoId type: ${options.type}. Entity: ${entity.name}`);\n            }\n        } else {\n            if (options.startFrom) {\n                featureExtra.startFrom = options.startFrom;\n            }\n        } \n        \n        if (options.name) {\n            typeInfo.name = options.name;\n        }\n    }\n\n    let fieldName = typeInfo.name;\n\n    entity.addFeature(FEATURE_NAME, {\n        field: fieldName,\n        ...featureExtra        \n    }).once('beforeAddingFields', () => {\n        entity.addField(fieldName, typeInfo)\n            .setKey(fieldName);\n    });\n}\n\nmodule.exports = feature;"],"mappings":"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"}