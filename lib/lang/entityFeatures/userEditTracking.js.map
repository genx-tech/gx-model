{"version":3,"sources":["../../../src/lang/entityFeatures/userEditTracking.js"],"names":["FEATURE_NAME","feature","entity","args","options","userEntity","uidSource","trackCreate","trackUpdate","revisionField","addFieldsOnly","userField","userFieldRef","migrationUser","linker","log","userEntityName","userIdField","split","getReferencedEntity","uidField","getEntityAttribute","fields","info","associations","push","type","destEntity","srcField","fieldProps","readOnly","writeOnce","once","addField","default","optional","addFeature","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,YAAY,GAAG,kBAArB;;AAYA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+B;AAC3B,QAAMC,OAAO,GAAG;AACZC,IAAAA,UAAU,EAAE,SADA;AAEZC,IAAAA,SAAS,EAAE,eAFC;AAGZC,IAAAA,WAAW,EAAE,WAHD;AAIZC,IAAAA,WAAW,EAAE,WAJD;AAKZC,IAAAA,aAAa,EAAE,UALH;AAMZC,IAAAA,aAAa,EAAE,KANH;AAOZ,OAAGP,IAAI,CAAC,CAAD;AAPK,GAAhB;AAUA,QAAM;AACFQ,IAAAA,SAAS,EAAEC,YADT;AAEFN,IAAAA,SAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA,WAJE;AAKFC,IAAAA,aALE;AAMFC,IAAAA,aANE;AAOFG,IAAAA;AAPE,MAQFT,OARJ;;AAUA,MAAI,CAACG,WAAD,IAAgB,CAACC,WAArB,EAAkC;AAC9BN,IAAAA,MAAM,CAACY,MAAP,CAAcC,GAAd,CAAkB,MAAlB,EAA0B,mHAA1B;AACA;AACH;;AAGD,QAAM,CAAEC,cAAF,EAAkBC,WAAlB,IAAkCL,YAAY,CAACM,KAAb,CAAmB,GAAnB,CAAxC;AAEA,QAAMb,UAAU,GAAGH,MAAM,CAACiB,mBAAP,CAA2BH,cAA3B,CAAnB;AACA,QAAMI,QAAQ,GAAGH,WAAW,IAAI,IAAf,GAAsBZ,UAAU,CAACgB,kBAAX,CAA8B,MAA9B,CAAtB,GAA8DhB,UAAU,CAACgB,kBAAX,CAA8BJ,WAA9B,CAA/E;AAEA,QAAMK,MAAM,GAAG,EAAf;;AAEA,MAAIf,WAAJ,EAAiB;AACbe,IAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBf,WAAtB;AAEAL,IAAAA,MAAM,CAACqB,IAAP,CAAYC,YAAZ,KAA6BtB,MAAM,CAACqB,IAAP,CAAYC,YAAZ,GAA2B,EAAxD;AACAtB,IAAAA,MAAM,CAACqB,IAAP,CAAYC,YAAZ,CAAyBC,IAAzB,CAA8B;AAC1BC,MAAAA,IAAI,EAAE,UADoB;AAE1BC,MAAAA,UAAU,EAAEX,cAFc;AAG1BY,MAAAA,QAAQ,EAAErB,WAHgB;AAI1BsB,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,IADF;AAERC,QAAAA,SAAS,EAAE;AAFH;AAJc,KAA9B;AASH;;AAED,MAAIvB,WAAJ,EAAiB;AACbN,IAAAA,MAAM,CAAC8B,IAAP,CAAY,mBAAZ,EAAiC,MAAM;AACnC9B,MAAAA,MAAM,CAAC+B,QAAP,CAAgBxB,aAAhB,EAA+B;AAC3BiB,QAAAA,IAAI,EAAE,SADqB;AAE3BQ,QAAAA,OAAO,EAAE;AAFkB,OAA/B;AAIH,KALD;AAOAZ,IAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBd,WAAtB;AACAc,IAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBb,aAArB;AAEAP,IAAAA,MAAM,CAACqB,IAAP,CAAYC,YAAZ,KAA6BtB,MAAM,CAACqB,IAAP,CAAYC,YAAZ,GAA2B,EAAxD;AACAtB,IAAAA,MAAM,CAACqB,IAAP,CAAYC,YAAZ,CAAyBC,IAAzB,CAA8B;AAC1BC,MAAAA,IAAI,EAAE,UADoB;AAE1BC,MAAAA,UAAU,EAAEX,cAFc;AAG1BY,MAAAA,QAAQ,EAAEpB,WAHgB;AAI1BqB,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,IADF;AAERK,QAAAA,QAAQ,EAAE;AAFF;AAJc,KAA9B;AASH;;AAED,MAAI,CAACzB,aAAL,EAAoB;AAChBR,IAAAA,MAAM,CAACkC,UAAP,CAAkBpC,YAAlB,EAAgC;AAC5BsB,MAAAA,MAD4B;AAE5BhB,MAAAA,SAF4B;AAG5BO,MAAAA;AAH4B,KAAhC;AAKH;AACJ;;AAEDwB,MAAM,CAACC,OAAP,GAAiBrC,OAAjB","sourcesContent":["\"use strict\";\n\nconst FEATURE_NAME = 'userEditTracking';\n\n/**\n * A rule specifies the entity to automatically record the creation time\n * @module EntityFeature_UserEditTracking\n */\n\n/**\n * Initialize the feature\n * @param {Entity} entity - Entity to apply this feature\n * @param {array} options - Field options\n */\nfunction feature(entity, args) {\n    const options = {\n        userEntity: 'user.id',\n        uidSource: 'state.user.id',\n        trackCreate: 'createdBy',\n        trackUpdate: 'updatedBy', \n        revisionField: 'revision',       \n        addFieldsOnly: false,\n        ...args[0]\n    };\n\n    const {\n        userField: userFieldRef,\n        uidSource,\n        trackCreate,\n        trackUpdate,\n        revisionField,\n        addFieldsOnly,\n        migrationUser\n    } = options;    \n\n    if (!trackCreate && !trackUpdate) {\n        entity.linker.log('warn', 'Since both \"trackCreate\" and \"trackUpdate\" are disabled, the \"userEditTracking\" feature will not take any effect.');\n        return;\n    }\n\n    //todo: cross scheam support\n    const [ userEntityName, userIdField ] = userFieldRef.split('.');\n\n    const userEntity = entity.getReferencedEntity(userEntityName);\n    const uidField = userIdField == null ? userEntity.getEntityAttribute('$key') : userEntity.getEntityAttribute(userIdField);\n\n    const fields = {};\n\n    if (trackCreate) {\n        fields['createdBy'] = trackCreate;\n\n        entity.info.associations || (entity.info.associations = []);\n        entity.info.associations.push({\n            type: 'refersTo',\n            destEntity: userEntityName,\n            srcField: trackCreate,\n            fieldProps: {\n                readOnly: true,\n                writeOnce: true\n            }\n        });\n    }\n\n    if (trackUpdate) {\n        entity.once('afterAddingFields', () => {\n            entity.addField(revisionField, {\n                type: 'integer',\n                default: 0\n            });\n        });\n\n        fields['updatedBy'] = trackUpdate;\n        fields['revision'] = revisionField;\n\n        entity.info.associations || (entity.info.associations = []);\n        entity.info.associations.push({\n            type: 'refersTo',\n            destEntity: userEntityName,\n            srcField: trackUpdate,\n            fieldProps: {\n                readOnly: true,\n                optional: true\n            }\n        });\n    }\n\n    if (!addFieldsOnly) {\n        entity.addFeature(FEATURE_NAME, {\n            fields,\n            uidSource,\n            migrationUser\n        });    \n    }\n}\n\nmodule.exports = feature;"],"file":"userEditTracking.js"}