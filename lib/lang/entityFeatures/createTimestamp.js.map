{"version":3,"file":"createTimestamp.js","names":["FEATURE_NAME","feature","entity","args","typeInfo","name","type","auto","readOnly","writeOnce","options","Object","assign","fieldName","addFeature","field","once","addField","module","exports"],"sources":["../../../src/lang/entityFeatures/createTimestamp.js"],"sourcesContent":["\"use strict\";\n\nconst FEATURE_NAME = 'createTimestamp';\n\n/**\n * A rule specifies the entity to automatically record the creation time\n * @module EntityFeature_CreateTimestamp\n */\n\n/**\n * Initialize the feature\n * @param {Entity} entity - Entity to apply this feature\n * @param {array} options - Field options\n */\nfunction feature(entity, args = []) {\n    let typeInfo = {\n        name: 'createdAt',\n        type: 'datetime',\n        auto: true,\n        readOnly: true,\n        writeOnce: true\n    };\n\n    let [ options ] = args;\n\n    if (options) {\n        if (typeof options === 'string') {\n            options = { name: options };\n        }\n\n        Object.assign(typeInfo, options);\n    }\n\n    let fieldName = typeInfo.name;\n\n    entity.addFeature(FEATURE_NAME, {\n        field: fieldName\n    }).once('afterAddingFields', () => {\n        entity.addField(fieldName, typeInfo);\n    });\n}\n\nmodule.exports = feature;"],"mappings":"AAAA;;;;AAEA,MAAMA,YAAY,GAAG,iBAArB;;AAYA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAI,GAAG,EAAhC,EAAoC;EAChC,IAAIC,QAAQ,GAAG;IACXC,IAAI,EAAE,WADK;IAEXC,IAAI,EAAE,UAFK;IAGXC,IAAI,EAAE,IAHK;IAIXC,QAAQ,EAAE,IAJC;IAKXC,SAAS,EAAE;EALA,CAAf;EAQA,IAAI,CAAEC,OAAF,IAAcP,IAAlB;;EAEA,IAAIO,OAAJ,EAAa;IACT,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;MAC7BA,OAAO,GAAG;QAAEL,IAAI,EAAEK;MAAR,CAAV;IACH;;IAEDC,MAAM,CAACC,MAAP,CAAcR,QAAd,EAAwBM,OAAxB;EACH;;EAED,IAAIG,SAAS,GAAGT,QAAQ,CAACC,IAAzB;EAEAH,MAAM,CAACY,UAAP,CAAkBd,YAAlB,EAAgC;IAC5Be,KAAK,EAAEF;EADqB,CAAhC,EAEGG,IAFH,CAEQ,mBAFR,EAE6B,MAAM;IAC/Bd,MAAM,CAACe,QAAP,CAAgBJ,SAAhB,EAA2BT,QAA3B;EACH,CAJD;AAKH;;AAEDc,MAAM,CAACC,OAAP,GAAiBlB,OAAjB"}