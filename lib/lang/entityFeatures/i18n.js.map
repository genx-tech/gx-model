{"version":3,"sources":["../../../src/lang/entityFeatures/i18n.js"],"names":["_","isPlainObject","require","FEATURE_NAME","feature","entity","args","options","Error","field","locales","addFeature","once","hasField","fieldInfo","fields","suffixSet","Set","Object","values","suffix","fieldName","addField","module","exports"],"mappings":"AAAA;;;;AAEA,MAAM;AAAEA,EAAAA,CAAF;AAAKC,EAAAA;AAAL,IAAuBC,OAAO,CAAC,YAAD,CAApC;;AACA,MAAMC,YAAY,GAAG,MAArB;;AAiBA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAI,GAAG,EAAhC,EAAoC;AAChC,MAAI,CAAEC,OAAF,IAAcD,IAAlB;;AAEA,MAAI,CAACC,OAAL,EAAc;AACV,UAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;;AAED,QAAM,CAAEC,KAAF,EAASC,OAAT,IAAqBH,OAA3B;;AAEA,MAAI,CAACE,KAAL,EAAY;AACR,UAAM,IAAID,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAED,MAAI,CAACE,OAAL,EAAc;AACV,UAAM,IAAIF,KAAJ,CAAU,oCAAV,CAAN;AACH;;AAED,MAAI,CAACP,aAAa,CAACM,OAAO,CAACG,OAAT,CAAlB,EAAqC;AACjC,UAAM,IAAIF,KAAJ,CAAU,gDAAV,CAAN;AACH;;AAEDH,EAAAA,MAAM,CAACM,UAAP,CAAkBR,YAAlB,EAAgCI,OAAhC,EAAyC,IAAzC,EAA+CK,IAA/C,CAAoD,mBAApD,EAAyE,MAAM;AAC3E,QAAI,CAACP,MAAM,CAACQ,QAAP,CAAgBJ,KAAhB,CAAL,EAA6B;AACzB,YAAM,IAAID,KAAJ,CAAU,YAAYC,KAAZ,GAAoB,mBAA9B,CAAN;AACH;;AAED,QAAIK,SAAS,GAAGT,MAAM,CAACU,MAAP,CAAcN,KAAd,CAAhB;AACA,QAAIO,SAAS,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,MAAP,CAAcT,OAAd,CAAR,CAAhB;;AAEA,SAAK,IAAIU,MAAT,IAAmBJ,SAAnB,EAA8B;AAC1B,UAAII,MAAM,KAAK,SAAf,EAA0B;AAE1B,UAAIC,SAAS,GAAGd,OAAO,CAACE,KAAR,GAAgB,GAAhB,GAAsBW,MAAtC;AACAf,MAAAA,MAAM,CAACiB,QAAP,CAAgBD,SAAhB,EAA2BP,SAA3B;AACH;AACJ,GAdD;AAgBH;;AAEDS,MAAM,CAACC,OAAP,GAAiBpB,OAAjB","sourcesContent":["\"use strict\";\n\nconst { _, isPlainObject } = require('@genx/july')\nconst FEATURE_NAME = 'i18n';\n\n/**\n * A rule specifies internationalization.\n * @module EntityFeature_I18n\n */\n\n/**\n * Initialize the feature\n * @param {Entity} entity - Entity to apply this feature\n * @param {object} options - Tracking field options \n * \n * 1. add locale suffix to field\n * 2. set a default locale\n * 3. if query with default locale, fallback to the field without suffix\n * \n */\nfunction feature(entity, args = []) {\n    let [ options ] = args;\n    \n    if (!options) {\n        throw new Error('Missing feature options!');\n    }\n\n    const [ field, locales ] = options;\n\n    if (!field) {\n        throw new Error('Missing field name in options!');\n    }\n\n    if (!locales) {\n        throw new Error('Missing locale mapping in options!');\n    }\n\n    if (!isPlainObject(options.locales)) {\n        throw new Error('Invalid locale mapping. Plain object expected!');\n    }\n\n    entity.addFeature(FEATURE_NAME, options, true).once('afterAddingFields', () => {\n        if (!entity.hasField(field)) {\n            throw new Error('Field \"' + field + '\" does not exist!');\n        }\n\n        let fieldInfo = entity.fields[field];\n        let suffixSet = new Set(Object.values(locales));\n\n        for (let suffix of suffixSet) {\n            if (suffix === 'default') continue;\n\n            let fieldName = options.field + '_' + suffix;\n            entity.addField(fieldName, fieldInfo);\n        }\n    });\n\n}\n\nmodule.exports = feature;"],"file":"i18n.js"}