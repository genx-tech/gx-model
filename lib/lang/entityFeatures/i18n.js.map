{"version":3,"sources":["../../../src/lang/entityFeatures/i18n.js"],"names":["_","require","FEATURE_NAME","feature","entity","args","options","Error","isPlainObject","field","locales","addFeature","once","hasField","fieldInfo","fields","suffixSet","Set","Object","values","suffix","fieldName","addField","module","exports"],"mappings":"AAAA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAQC,OAAO,CAAC,YAAD,CAArB;;AACA,MAAMC,YAAY,GAAG,MAArB;;AAcA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAI,GAAG,EAAhC,EAAoC;AAChC,MAAI,CAAEC,OAAF,IAAcD,IAAlB;;AAEA,MAAI,CAACC,OAAL,EAAc;AACV,UAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;;AAED,MAAI,CAACP,CAAC,CAACQ,aAAF,CAAgBF,OAAhB,CAAL,EAA+B;AAC3B,UAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACH;;AAED,MAAI,CAACD,OAAO,CAACG,KAAb,EAAoB;AAChB,UAAM,IAAIF,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAED,MAAI,CAACD,OAAO,CAACI,OAAb,EAAsB;AAClB,UAAM,IAAIH,KAAJ,CAAU,oCAAV,CAAN;AACH;;AAED,MAAI,CAACP,CAAC,CAACQ,aAAF,CAAgBF,OAAO,CAACI,OAAxB,CAAL,EAAuC;AACnC,UAAM,IAAIH,KAAJ,CAAU,gDAAV,CAAN;AACH;;AAEDH,EAAAA,MAAM,CAACO,UAAP,CAAkBT,YAAlB,EAAgCI,OAAhC,EAAyC,IAAzC,EAA+CM,IAA/C,CAAoD,mBAApD,EAAyE,MAAM;AAC3E,QAAI,CAACR,MAAM,CAACS,QAAP,CAAgBP,OAAO,CAACG,KAAxB,CAAL,EAAqC;AACjC,YAAM,IAAIF,KAAJ,CAAU,YAAYD,OAAO,CAACG,KAApB,GAA4B,mBAAtC,CAAN;AACH;;AAED,QAAIK,SAAS,GAAGV,MAAM,CAACW,MAAP,CAAcT,OAAO,CAACG,KAAtB,CAAhB;AACA,QAAIO,SAAS,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,MAAP,CAAcb,OAAO,CAACI,OAAtB,CAAR,CAAhB;;AAEA,SAAK,IAAIU,MAAT,IAAmBJ,SAAnB,EAA8B;AAC1B,UAAII,MAAM,KAAK,SAAf,EAA0B;AAE1B,UAAIC,SAAS,GAAGf,OAAO,CAACG,KAAR,GAAgB,GAAhB,GAAsBW,MAAtC;AACAhB,MAAAA,MAAM,CAACkB,QAAP,CAAgBD,SAAhB,EAA2BP,SAA3B;AACH;AACJ,GAdD;AAgBH;;AAEDS,MAAM,CAACC,OAAP,GAAiBrB,OAAjB","sourcesContent":["\"use strict\";\n\nconst { _ } = require('@genx/july')\nconst FEATURE_NAME = 'i18n';\n\n/**\n * A rule specifies internationalization.\n * @module EntityFeature_I18n\n */\n\n/**\n * Initialize the feature\n * @param {Entity} entity - Entity to apply this feature\n * @param {object} options - Tracking field options\n * @property {string} options.field - State field to apply this feature\n * @property {object} [options.locales] - Specify the locale mapping rule\n */\nfunction feature(entity, args = []) {\n    let [ options ] = args;\n    \n    if (!options) {\n        throw new Error('Missing feature options!');\n    }\n\n    if (!_.isPlainObject(options)) {\n        throw new Error('Invalid feature options. Plain object expected!');\n    }\n\n    if (!options.field) {\n        throw new Error('Missing field name in options!');\n    }\n\n    if (!options.locales) {\n        throw new Error('Missing locale mapping in options!');\n    }\n\n    if (!_.isPlainObject(options.locales)) {\n        throw new Error('Invalid locale mapping. Plain object expected!');\n    }\n\n    entity.addFeature(FEATURE_NAME, options, true).once('afterAddingFields', () => {\n        if (!entity.hasField(options.field)) {\n            throw new Error('Field \"' + options.field + '\" does not exist!');\n        }\n\n        let fieldInfo = entity.fields[options.field];\n        let suffixSet = new Set(Object.values(options.locales));\n\n        for (let suffix of suffixSet) {\n            if (suffix === 'default') continue;\n\n            let fieldName = options.field + '_' + suffix;\n            entity.addField(fieldName, fieldInfo);\n        }\n    });\n\n}\n\nmodule.exports = feature;"],"file":"i18n.js"}