"use strict";

require("source-map-support/register");

const {
  auto
} = require("async");

const {
  _
} = require('rk-utils');

function applyRule(db, Entity, entity) {
  const associations = Entity.meta.associations;
  associations && _.forOwn(associations, (assoc, anchor) => {
    const key = ':' + anchor;
    const subEntity = entity[key];

    if (subEntity) {
      if (assoc.list) {
        const SubEntity = db.model(assoc.entity);
        subEntity.forEach(item => {
          delete item[assoc.field];
          applyRule(db, SubEntity, item);
        });
      }
    }
  });
  entity.$skipModifiers = true;
}

;
module.exports = applyRule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9taWdyYXRpb24vcnVsZXMvZGVmYXVsdC5qcyJdLCJuYW1lcyI6WyJhdXRvIiwicmVxdWlyZSIsIl8iLCJhcHBseVJ1bGUiLCJkYiIsIkVudGl0eSIsImVudGl0eSIsImFzc29jaWF0aW9ucyIsIm1ldGEiLCJmb3JPd24iLCJhc3NvYyIsImFuY2hvciIsImtleSIsInN1YkVudGl0eSIsImxpc3QiLCJTdWJFbnRpdHkiLCJtb2RlbCIsImZvckVhY2giLCJpdGVtIiwiZmllbGQiLCIkc2tpcE1vZGlmaWVycyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBV0MsT0FBTyxDQUFDLE9BQUQsQ0FBeEI7O0FBRUEsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQVFELE9BQU8sQ0FBQyxVQUFELENBQXJCOztBQUVBLFNBQVNFLFNBQVQsQ0FBbUJDLEVBQW5CLEVBQXVCQyxNQUF2QixFQUErQkMsTUFBL0IsRUFBdUM7QUFHbkMsUUFBTUMsWUFBWSxHQUFHRixNQUFNLENBQUNHLElBQVAsQ0FBWUQsWUFBakM7QUFDQUEsRUFBQUEsWUFBWSxJQUFJTCxDQUFDLENBQUNPLE1BQUYsQ0FBU0YsWUFBVCxFQUF1QixDQUFDRyxLQUFELEVBQVFDLE1BQVIsS0FBbUI7QUFDdEQsVUFBTUMsR0FBRyxHQUFHLE1BQU1ELE1BQWxCO0FBRUEsVUFBTUUsU0FBUyxHQUFHUCxNQUFNLENBQUNNLEdBQUQsQ0FBeEI7O0FBQ0EsUUFBSUMsU0FBSixFQUFlO0FBQ1gsVUFBSUgsS0FBSyxDQUFDSSxJQUFWLEVBQWdCO0FBRVosY0FBTUMsU0FBUyxHQUFHWCxFQUFFLENBQUNZLEtBQUgsQ0FBU04sS0FBSyxDQUFDSixNQUFmLENBQWxCO0FBQ0FPLFFBQUFBLFNBQVMsQ0FBQ0ksT0FBVixDQUFrQkMsSUFBSSxJQUFJO0FBQ3RCLGlCQUFPQSxJQUFJLENBQUNSLEtBQUssQ0FBQ1MsS0FBUCxDQUFYO0FBQ0FoQixVQUFBQSxTQUFTLENBQUNDLEVBQUQsRUFBS1csU0FBTCxFQUFnQkcsSUFBaEIsQ0FBVDtBQUNILFNBSEQ7QUFJSDtBQUNKO0FBQ0osR0FkZSxDQUFoQjtBQWdCQVosRUFBQUEsTUFBTSxDQUFDYyxjQUFQLEdBQXdCLElBQXhCO0FBQ0g7O0FBQUE7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsU0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGF1dG8gfSA9IHJlcXVpcmUoXCJhc3luY1wiKTtcblxuY29uc3QgeyBfIH0gPSByZXF1aXJlKCdyay11dGlscycpO1xuXG5mdW5jdGlvbiBhcHBseVJ1bGUoZGIsIEVudGl0eSwgZW50aXR5KSB7XG4gICAgLy9yZW1vdmUgYmFjayByZWZlcmVuY2VcblxuICAgIGNvbnN0IGFzc29jaWF0aW9ucyA9IEVudGl0eS5tZXRhLmFzc29jaWF0aW9ucztcbiAgICBhc3NvY2lhdGlvbnMgJiYgXy5mb3JPd24oYXNzb2NpYXRpb25zLCAoYXNzb2MsIGFuY2hvcikgPT4ge1xuICAgICAgICBjb25zdCBrZXkgPSAnOicgKyBhbmNob3I7XG5cbiAgICAgICAgY29uc3Qgc3ViRW50aXR5ID0gZW50aXR5W2tleV07XG4gICAgICAgIGlmIChzdWJFbnRpdHkpIHtcbiAgICAgICAgICAgIGlmIChhc3NvYy5saXN0KSB7XG4gICAgICAgICAgICAgICAgLy9hcnJheSBvZiBvYmplY3RzXG4gICAgICAgICAgICAgICAgY29uc3QgU3ViRW50aXR5ID0gZGIubW9kZWwoYXNzb2MuZW50aXR5KTtcbiAgICAgICAgICAgICAgICBzdWJFbnRpdHkuZm9yRWFjaChpdGVtID0+IHsgXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBpdGVtW2Fzc29jLmZpZWxkXTtcbiAgICAgICAgICAgICAgICAgICAgYXBwbHlSdWxlKGRiLCBTdWJFbnRpdHksIGl0ZW0pOyBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gXG4gICAgICAgIH0gXG4gICAgfSk7XG5cbiAgICBlbnRpdHkuJHNraXBNb2RpZmllcnMgPSB0cnVlO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHBseVJ1bGU7Il19