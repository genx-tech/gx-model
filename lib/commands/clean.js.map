{"version":3,"sources":["../../src/commands/clean.js"],"names":["path","require","_","naming","eachAsync_","del","throwIfFileNotExist","Linker","module","exports","app","context","log","name","gemlPath","linker","schemaFiles","getGemlFiles","useJsonSource","forEach","schemaFile","link","jsonOnly","option","jsonFiles","join","schemas","schema","schemaName","manifestPath","modelPath","pascalCase"],"mappings":";;;;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAM;AAAEC,EAAAA,CAAF;AAAKC,EAAAA,MAAL;AAAaC,EAAAA;AAAb,IAA4BH,OAAO,CAAC,YAAD,CAAzC;;AACA,MAAMI,GAAG,GAAGJ,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAA0BL,OAAO,CAAC,kBAAD,CAAvC;;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,gBAAD,CAAtB;;AAgBAO,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,OAAZ,KAAwB;AACrCD,EAAAA,GAAG,CAACE,GAAJ,CAAQ,SAAR,EAAoB,GAAEF,GAAG,CAACG,IAAK,QAA/B;AAEAP,EAAAA,mBAAmB,CAAC,UAAD,EAAaK,OAAO,CAACG,QAArB,CAAnB;AAEA,MAAIC,MAAM,GAAG,IAAIR,MAAJ,CAAWG,GAAX,EAAgBC,OAAhB,CAAb;AAEA,MAAIK,WAAW,GAAGT,MAAM,CAACU,YAAP,CAAoBN,OAAO,CAACG,QAA5B,EAAsCH,OAAO,CAACO,aAA9C,CAAlB;AACAF,EAAAA,WAAW,CAACG,OAAZ,CAAoBC,UAAU,IAAIL,MAAM,CAACM,IAAP,CAAYD,UAAZ,CAAlC;AAEA,QAAME,QAAQ,GAAGZ,GAAG,CAACa,MAAJ,CAAW,WAAX,CAAjB;AAEA,QAAMC,SAAS,GAAGxB,IAAI,CAACyB,IAAL,CAAUd,OAAO,CAACG,QAAlB,EAA4B,WAA5B,CAAlB;AACA,QAAMT,GAAG,CAACmB,SAAD,CAAT;AACAd,EAAAA,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAiB,6BAAjB;;AAEA,MAAI,CAACU,QAAL,EAAe;AACX,WAAOlB,UAAU,CAACW,MAAM,CAACW,OAAR,EAAiB,OAAOC,MAAP,EAAeC,UAAf,KAA8B;AAC5DlB,MAAAA,GAAG,CAACE,GAAJ,CAAQ,SAAR,EAAoB,4CAA2CgB,UAAW,OAA1E;AAEA,YAAMvB,GAAG,CAAC,CACNL,IAAI,CAACyB,IAAL,CAAUd,OAAO,CAACkB,YAAlB,EAAgCD,UAAhC,EAA6C,MAA7C,CADM,EAEN5B,IAAI,CAACyB,IAAL,CAAUd,OAAO,CAACkB,YAAlB,EAAgCD,UAAhC,EAA6C,QAA7C,CAFM,EAGN5B,IAAI,CAACyB,IAAL,CAAUd,OAAO,CAACmB,SAAlB,EAA6B3B,MAAM,CAAC4B,UAAP,CAAkBH,UAAlB,IAAgC,KAA7D,CAHM,EAIN5B,IAAI,CAACyB,IAAL,CAAUd,OAAO,CAACmB,SAAlB,EAA6BF,UAA7B,EAAyC,MAAzC,EAAiD,MAAjD,CAJM,EAKN5B,IAAI,CAACyB,IAAL,CAAUd,OAAO,CAACmB,SAAlB,EAA6BF,UAA7B,EAAyC,QAAzC,EAAmD,MAAnD,CALM,EAMN5B,IAAI,CAACyB,IAAL,CAAUd,OAAO,CAACmB,SAAlB,EAA6BF,UAA7B,EAAyC,OAAzC,EAAkD,MAAlD,CANM,CAAD,CAAT;AASAlB,MAAAA,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAiB,2CAA0CgB,UAAW,IAAtE;AACH,KAbgB,CAAjB;AAcH;AACJ,CAhCD","sourcesContent":["const path = require('path');\nconst { _, naming, eachAsync_ } = require('@genx/july');\nconst del = require('del');\nconst { throwIfFileNotExist } = require('../utils/helpers');\nconst Linker = require('../lang/Linker');\n\n\n/**\n * Build database scripts and entity models from oolong files.\n * @param {ServiceContainer} app\n * @param {object} context \n * @property {string} context.gemlPath\n * @property {string} context.modelPath         \n * @property {string} context.scriptPath\n * @property {string} context.manifestPath\n * @property {bool} context.useJsonSource\n * @property {bool} context.saveIntermediate\n * @property {object} context.schemas   \n * @returns {Promise}\n */\nmodule.exports = async (app, context) => {\n    app.log('verbose', `${app.name} clean`);\n\n    throwIfFileNotExist(\"gemlPath\", context.gemlPath);\n\n    let linker = new Linker(app, context);\n\n    let schemaFiles = Linker.getGemlFiles(context.gemlPath, context.useJsonSource);\n    schemaFiles.forEach(schemaFile => linker.link(schemaFile)); \n\n    const jsonOnly = app.option('json-only');\n    \n    const jsonFiles = path.join(context.gemlPath, '**/*.json');\n    await del(jsonFiles);\n    app.log('info', `Deleted intermediate files.`);   \n\n    if (!jsonOnly) {\n        return eachAsync_(linker.schemas, async (schema, schemaName) => {      \n            app.log('verbose', `Removing auto-generated files of schema \"${schemaName}\" ...`);   \n\n            await del([\n                path.join(context.manifestPath, schemaName,  '*.js'),\n                path.join(context.manifestPath, schemaName,  '*.json'),\n                path.join(context.modelPath, naming.pascalCase(schemaName) + '.js'),\n                path.join(context.modelPath, schemaName, 'base', '*.js'),\n                path.join(context.modelPath, schemaName, 'inputs', '*.js'),\n                path.join(context.modelPath, schemaName, 'types', '*.js'),\n            ]);\n\n            app.log('info', `Removed auto-generated files of schema \"${schemaName}\".`);           \n        });            \n    }\n};\n"],"file":"clean.js"}