{"version":3,"file":"pull.js","names":["path","require","getSchemaConnectors","fs","isDirEmpty","module","exports","app","context","log","name","schemaName","option","override","schemaToConnector","schemas","connector","manifestPath","Error","targetPath","join","ensureDirSync","ReserveEngineering","driver","modeler","reverse_"],"sources":["../../src/commands/pull.js"],"sourcesContent":["const path = require('path');\nconst { getSchemaConnectors } = require('../utils/helpers');\nconst { fs, isDirEmpty } = require('@genx/sys');\n\n/**\n * Pull schema from database (reverse engineering).\n * @param {ServiceContainer} app\n * @param {object} context \n * @property {string} context.gemlPath\n * @property {string} context.modelPath         \n * @property {string} context.scriptPath\n * @property {string} context.manifestPath\n * @property {bool} context.useJsonSource\n * @property {bool} context.saveIntermediate\n * @property {object} context.schemas   \n * @returns {Promise}\n */\nmodule.exports = async (app, context) => {\n    app.log('verbose', `${app.name} pull`);\n\n    let schemaName = app.option('schema');\n    let override = app.option('override');\n\n    let schemaToConnector = getSchemaConnectors(app, context.schemas);\n    let connector = schemaToConnector[schemaName];\n\n    if (!context.manifestPath) {\n        throw new Error('Config \"geml.manifestPath\" for \"pull\" command is required.');\n    }\n\n    let targetPath = path.join(context.manifestPath, 'reverse');\n    fs.ensureDirSync(targetPath);\n\n    if (!override && !isDirEmpty(targetPath)) {\n        throw new Error(`Target path \"${targetPath}\" is not empty. Use --override to force.`);\n    }\n\n    const ReserveEngineering = require(`../modeler/database/${connector.driver}/ReverseEngineering`);\n    let modeler = new ReserveEngineering(context, app, connector);\n\n    await modeler.reverse_(targetPath);\n};\n"],"mappings":";;;;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAM;EAAEC;AAAF,IAA0BD,OAAO,CAAC,kBAAD,CAAvC;;AACA,MAAM;EAAEE,EAAF;EAAMC;AAAN,IAAqBH,OAAO,CAAC,WAAD,CAAlC;;AAeAI,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,OAAZ,KAAwB;EACrCD,GAAG,CAACE,GAAJ,CAAQ,SAAR,EAAoB,GAAEF,GAAG,CAACG,IAAK,OAA/B;EAEA,IAAIC,UAAU,GAAGJ,GAAG,CAACK,MAAJ,CAAW,QAAX,CAAjB;EACA,IAAIC,QAAQ,GAAGN,GAAG,CAACK,MAAJ,CAAW,UAAX,CAAf;EAEA,IAAIE,iBAAiB,GAAGZ,mBAAmB,CAACK,GAAD,EAAMC,OAAO,CAACO,OAAd,CAA3C;EACA,IAAIC,SAAS,GAAGF,iBAAiB,CAACH,UAAD,CAAjC;;EAEA,IAAI,CAACH,OAAO,CAACS,YAAb,EAA2B;IACvB,MAAM,IAAIC,KAAJ,CAAU,4DAAV,CAAN;EACH;;EAED,IAAIC,UAAU,GAAGnB,IAAI,CAACoB,IAAL,CAAUZ,OAAO,CAACS,YAAlB,EAAgC,SAAhC,CAAjB;EACAd,EAAE,CAACkB,aAAH,CAAiBF,UAAjB;;EAEA,IAAI,CAACN,QAAD,IAAa,CAACT,UAAU,CAACe,UAAD,CAA5B,EAA0C;IACtC,MAAM,IAAID,KAAJ,CAAW,gBAAeC,UAAW,0CAArC,CAAN;EACH;;EAED,MAAMG,kBAAkB,GAAGrB,OAAO,CAAE,uBAAsBe,SAAS,CAACO,MAAO,qBAAzC,CAAlC;;EACA,IAAIC,OAAO,GAAG,IAAIF,kBAAJ,CAAuBd,OAAvB,EAAgCD,GAAhC,EAAqCS,SAArC,CAAd;EAEA,MAAMQ,OAAO,CAACC,QAAR,CAAiBN,UAAjB,CAAN;AACH,CAxBD"}