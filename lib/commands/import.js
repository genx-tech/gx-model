"use strict";

require("source-map-support/register");

const {
  _,
  eachAsync_
} = require('rk-utils');

const {
  throwIfFileNotExist,
  getSchemaConnectors,
  importDataFiles
} = require('../utils/helpers');

module.exports = async (app, context) => {
  app.log('verbose', 'geml import');
  throwIfFileNotExist("modelPath", context.modelPath);
  throwIfFileNotExist("scriptPath", context.scriptPath);
  let schemaName = app.option('schema');
  let dataset = app.option('dataset');
  let schemaConfig = context.schemas[schemaName];

  if (!schemaConfig) {
    throw new Error(`Schema "${schemaName}" not found in geml config.`);
  }

  const db = app.db(schemaName);

  const Migrator = require(`../migration/${db.driver}`);

  const migrator = new Migrator(app, context, db);
  await migrator.create_(schemaConfig.extraOptions);
  await importDataFiles(migrator, dataset);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9pbXBvcnQuanMiXSwibmFtZXMiOlsiXyIsImVhY2hBc3luY18iLCJyZXF1aXJlIiwidGhyb3dJZkZpbGVOb3RFeGlzdCIsImdldFNjaGVtYUNvbm5lY3RvcnMiLCJpbXBvcnREYXRhRmlsZXMiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiY29udGV4dCIsImxvZyIsIm1vZGVsUGF0aCIsInNjcmlwdFBhdGgiLCJzY2hlbWFOYW1lIiwib3B0aW9uIiwiZGF0YXNldCIsInNjaGVtYUNvbmZpZyIsInNjaGVtYXMiLCJFcnJvciIsImRiIiwiTWlncmF0b3IiLCJkcml2ZXIiLCJtaWdyYXRvciIsImNyZWF0ZV8iLCJleHRyYU9wdGlvbnMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNO0FBQUVBLEVBQUFBLENBQUY7QUFBS0MsRUFBQUE7QUFBTCxJQUFvQkMsT0FBTyxDQUFDLFVBQUQsQ0FBakM7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxtQkFBRjtBQUF1QkMsRUFBQUEsbUJBQXZCO0FBQTRDQyxFQUFBQTtBQUE1QyxJQUFnRUgsT0FBTyxDQUFDLGtCQUFELENBQTdFOztBQWVBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsT0FBT0MsR0FBUCxFQUFZQyxPQUFaLEtBQXdCO0FBQ3JDRCxFQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUSxTQUFSLEVBQW1CLGFBQW5CO0FBRUFQLEVBQUFBLG1CQUFtQixDQUFDLFdBQUQsRUFBY00sT0FBTyxDQUFDRSxTQUF0QixDQUFuQjtBQUNBUixFQUFBQSxtQkFBbUIsQ0FBQyxZQUFELEVBQWVNLE9BQU8sQ0FBQ0csVUFBdkIsQ0FBbkI7QUFFQSxNQUFJQyxVQUFVLEdBQUdMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLFFBQVgsQ0FBakI7QUFDQSxNQUFJQyxPQUFPLEdBQUdQLEdBQUcsQ0FBQ00sTUFBSixDQUFXLFNBQVgsQ0FBZDtBQUVBLE1BQUlFLFlBQVksR0FBR1AsT0FBTyxDQUFDUSxPQUFSLENBQWdCSixVQUFoQixDQUFuQjs7QUFDQSxNQUFJLENBQUNHLFlBQUwsRUFBbUI7QUFDZixVQUFNLElBQUlFLEtBQUosQ0FBVyxXQUFVTCxVQUFXLDZCQUFoQyxDQUFOO0FBQ0g7O0FBRUQsUUFBTU0sRUFBRSxHQUFHWCxHQUFHLENBQUNXLEVBQUosQ0FBT04sVUFBUCxDQUFYOztBQUVBLFFBQU1PLFFBQVEsR0FBR2xCLE9BQU8sQ0FBRSxnQkFBZWlCLEVBQUUsQ0FBQ0UsTUFBTyxFQUEzQixDQUF4Qjs7QUFDQSxRQUFNQyxRQUFRLEdBQUcsSUFBSUYsUUFBSixDQUFhWixHQUFiLEVBQWtCQyxPQUFsQixFQUEyQlUsRUFBM0IsQ0FBakI7QUFFQSxRQUFNRyxRQUFRLENBQUNDLE9BQVQsQ0FBaUJQLFlBQVksQ0FBQ1EsWUFBOUIsQ0FBTjtBQUVBLFFBQU1uQixlQUFlLENBQUNpQixRQUFELEVBQVdQLE9BQVgsQ0FBckI7QUFDSCxDQXRCRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgXywgZWFjaEFzeW5jXyB9ID0gcmVxdWlyZSgncmstdXRpbHMnKTtcbmNvbnN0IHsgdGhyb3dJZkZpbGVOb3RFeGlzdCwgZ2V0U2NoZW1hQ29ubmVjdG9ycywgaW1wb3J0RGF0YUZpbGVzIH0gPSByZXF1aXJlKCcuLi91dGlscy9oZWxwZXJzJyk7XG5cbi8qKlxuICogQnVpbGQgZGF0YWJhc2Ugc2NyaXB0cyBhbmQgZW50aXR5IG1vZGVscyBmcm9tIG9vbG9uZyBmaWxlcy5cbiAqIEBwYXJhbSB7U2VydmljZUNvbnRhaW5lcn0gYXBwXG4gKiBAcGFyYW0ge29iamVjdH0gY29udGV4dCBcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBjb250ZXh0LmdlbWxQYXRoXG4gKiBAcHJvcGVydHkge3N0cmluZ30gY29udGV4dC5tb2RlbFBhdGggICAgICAgICBcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBjb250ZXh0LnNjcmlwdFBhdGhcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBjb250ZXh0Lm1hbmlmZXN0UGF0aFxuICogQHByb3BlcnR5IHtib29sfSBjb250ZXh0LnVzZUpzb25Tb3VyY2VcbiAqIEBwcm9wZXJ0eSB7Ym9vbH0gY29udGV4dC5zYXZlSW50ZXJtZWRpYXRlXG4gKiBAcHJvcGVydHkge29iamVjdH0gY29udGV4dC5zY2hlbWFzICAgXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoYXBwLCBjb250ZXh0KSA9PiB7XG4gICAgYXBwLmxvZygndmVyYm9zZScsICdnZW1sIGltcG9ydCcpO1xuXG4gICAgdGhyb3dJZkZpbGVOb3RFeGlzdChcIm1vZGVsUGF0aFwiLCBjb250ZXh0Lm1vZGVsUGF0aCk7XG4gICAgdGhyb3dJZkZpbGVOb3RFeGlzdChcInNjcmlwdFBhdGhcIiwgY29udGV4dC5zY3JpcHRQYXRoKTtcblxuICAgIGxldCBzY2hlbWFOYW1lID0gYXBwLm9wdGlvbignc2NoZW1hJyk7XG4gICAgbGV0IGRhdGFzZXQgPSBhcHAub3B0aW9uKCdkYXRhc2V0Jyk7XG5cbiAgICBsZXQgc2NoZW1hQ29uZmlnID0gY29udGV4dC5zY2hlbWFzW3NjaGVtYU5hbWVdO1xuICAgIGlmICghc2NoZW1hQ29uZmlnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgU2NoZW1hIFwiJHtzY2hlbWFOYW1lfVwiIG5vdCBmb3VuZCBpbiBnZW1sIGNvbmZpZy5gKTtcbiAgICB9XG5cbiAgICBjb25zdCBkYiA9IGFwcC5kYihzY2hlbWFOYW1lKTsgICAgICAgIFxuICAgIFxuICAgIGNvbnN0IE1pZ3JhdG9yID0gcmVxdWlyZShgLi4vbWlncmF0aW9uLyR7ZGIuZHJpdmVyfWApO1xuICAgIGNvbnN0IG1pZ3JhdG9yID0gbmV3IE1pZ3JhdG9yKGFwcCwgY29udGV4dCwgZGIpO1xuXG4gICAgYXdhaXQgbWlncmF0b3IuY3JlYXRlXyhzY2hlbWFDb25maWcuZXh0cmFPcHRpb25zKTsgICAgICBcblxuICAgIGF3YWl0IGltcG9ydERhdGFGaWxlcyhtaWdyYXRvciwgZGF0YXNldCk7ICBcbn07XG4iXX0=