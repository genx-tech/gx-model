{"version":3,"sources":["../../../../src/modeler/database/mongodb/Modeler.js"],"names":["path","require","fs","MongoDbModeler","constructor","context","connector","dbOptions","logger","linker","outputPath","scriptOutputPath","modeling","schema","dataFilesDir","join","database","initIdxFilePath","initFilePath","_writeFile","JSON","stringify","existsSync","filePath","content","ensureFileSync","writeFileSync","log","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAASD,OAAO,CAAC,WAAD,CAAtB;;AAMA,MAAME,cAAN,CAAqB;AAUjBC,EAAAA,WAAW,CAACC,OAAD,EAAUC,SAAV,EAAqBC,SAArB,EAAgC;AACvC,SAAKC,MAAL,GAAcH,OAAO,CAACG,MAAtB;AACA,SAAKC,MAAL,GAAcJ,OAAO,CAACI,MAAtB;AACA,SAAKC,UAAL,GAAkBL,OAAO,CAACM,gBAA1B;AACA,SAAKL,SAAL,GAAiBA,SAAjB;AAGH;;AAEDM,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,QAAIC,YAAY,GAAGd,IAAI,CAACe,IAAL,CAAU,SAAV,EAAqB,KAAKT,SAAL,CAAeU,QAApC,CAAnB;AAEA,QAAIC,eAAe,GAAGjB,IAAI,CAACe,IAAL,CAAUD,YAAV,EAAwB,MAAxB,EAAgC,OAAhC,EAAyC,YAAzC,CAAtB;AACA,QAAII,YAAY,GAAGlB,IAAI,CAACe,IAAL,CAAUD,YAAV,EAAwB,MAAxB,EAAgC,OAAhC,EAAyC,aAAzC,CAAnB;;AAEA,SAAKK,UAAL,CAAgBnB,IAAI,CAACe,IAAL,CAAU,KAAKL,UAAf,EAA2BQ,YAA3B,CAAhB,EAA0DE,IAAI,CAACC,SAAL,CAAe,EAAf,EAAmB,IAAnB,EAAyB,CAAzB,CAA1D;;AAEA,QAAI,CAACnB,EAAE,CAACoB,UAAH,CAActB,IAAI,CAACe,IAAL,CAAU,KAAKL,UAAf,EAA2BO,eAA3B,CAAd,CAAL,EAAiE;AAC7D,WAAKE,UAAL,CAAgBnB,IAAI,CAACe,IAAL,CAAU,KAAKL,UAAf,EAA2BO,eAA3B,CAAhB,EAA6D,eAA7D;AACH;;AAED,WAAOJ,MAAP;AACH;;AAEDM,EAAAA,UAAU,CAACI,QAAD,EAAWC,OAAX,EAAoB;AAC1BtB,IAAAA,EAAE,CAACuB,cAAH,CAAkBF,QAAlB;AACArB,IAAAA,EAAE,CAACwB,aAAH,CAAiBH,QAAjB,EAA2BC,OAA3B;AAEA,SAAKhB,MAAL,CAAYmB,GAAZ,CAAgB,MAAhB,EAAwB,0BAA0BJ,QAAlD;AACH;;AAvCgB;;AA0CrBK,MAAM,CAACC,OAAP,GAAiB1B,cAAjB","sourcesContent":["\"use strict\";\n\nconst path = require('path');\nconst { fs } = require('@genx/sys');\n\n/**\n * Ooolong database modeler for mongodb.\n * @class\n */\nclass MongoDbModeler {\n    /**     \n     * @param {object} context\n     * @property {Logger} context.logger - Logger object     \n     * @property {OolongLinker} context.linker - Oolong DSL linker\n     * @property {string} context.scriptOutputPath - Generated script path\n     * @param {object} dbOptions\n     * @property {object} dbOptions.db\n     * @property {object} dbOptions.table\n     */\n    constructor(context, connector, dbOptions) {\n        this.logger = context.logger;\n        this.linker = context.linker;\n        this.outputPath = context.scriptOutputPath;\n        this.connector = connector;\n\n        \n    }\n\n    modeling(schema) {\n        let dataFilesDir = path.join('mongodb', this.connector.database);\n\n        let initIdxFilePath = path.join(dataFilesDir, 'data', '_init', 'index.list');\n        let initFilePath = path.join(dataFilesDir, 'data', '_init', '0-init.json');\n\n        this._writeFile(path.join(this.outputPath, initFilePath), JSON.stringify({}, null, 4));\n\n        if (!fs.existsSync(path.join(this.outputPath, initIdxFilePath))) {\n            this._writeFile(path.join(this.outputPath, initIdxFilePath), '0-init.json\\n');\n        }\n\n        return schema;\n    }    \n\n    _writeFile(filePath, content) {\n        fs.ensureFileSync(filePath);\n        fs.writeFileSync(filePath, content);\n\n        this.logger.log('info', 'Generated db script: ' + filePath);\n    }\n}\n\nmodule.exports = MongoDbModeler;"],"file":"Modeler.js"}